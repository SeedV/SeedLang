--
-- Copyright 2021 The Aha001 Team.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

module SeedAst {
  Statement = AssignmentStatement(IdentifierExpression identifier, Expression expr, Range range)
    | BlockStatement(Statement* statements)
    | ExpressionStatement(Expression expr, Range range)
    | IfStatement(Expression test, Statement thenBody, Statement elseBody, Range range)
    | WhileStatement(Expression test, Statement body, Range range)

  Expression = BinaryExpression(Expression left, BinaryOperator op, Expression right, Range range)
    | BooleanExpression(BooleanOperator op, Expression* exprs, Range range)
    | ComparisonExpression(Expression first, ComparisonOperator* ops, Expression* exprs, Range range)
    | UnaryExpression(UnaryOperator op, Expression expr, Range range)

    | IdentifierExpression(string name, Range range)

    | BooleanConstantExpression(bool valuem , Range range)
    | NoneConstantExpression(Range range)
    | NumberConstantExpression(doubel value, Range range)
    | StringConstantExpression(string value, Range range)

    | ListExpression(Expression* exprs)
    | SubscriptExpression(Expression expr, Expression index)

  BinaryOperator = Add | Subtract | Multiply | Divide | FloorDivide
  BooleanOperator = And | Or
  ComparisonOperator = Less | LessEqual | Greater | GreaterEqual | EqEqual | NotEqual
  UnaryOperator = Positive | Nagetive | Not
}
